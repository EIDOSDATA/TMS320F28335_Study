/*
 * Fram.h
 *
 *  Created on: 2023. 11. 15.
 *      Author: ShinSung Industrial Electric
 */

#ifndef BSP_ZONE7_MEMORY_FRAM_H_
#define BSP_ZONE7_MEMORY_FRAM_H_

#include "hw_def.h"


#define FRAM_UI_OFFSET       2
#define FRAM_F_OFFSET        4

#define FRAM_BLOCK_SIZE     0x100

enum
{
    FRAM_INDEX0,    FRAM_INDEX1,    FRAM_INDEX2,    FRAM_INDEX3,    FRAM_INDEX4,    FRAM_INDEX5,    FRAM_INDEX6,    FRAM_INDEX7,    FRAM_INDEX8,    FRAM_INDEX9,
    FRAM_INDEX10,   FRAM_INDEX11,   FRAM_INDEX12,   FRAM_INDEX13,   FRAM_INDEX14,   FRAM_INDEX15,   FRAM_INDEX16,   FRAM_INDEX17,   FRAM_INDEX18,   FRAM_INDEX19,
    FRAM_INDEX20,   FRAM_INDEX21,   FRAM_INDEX22,   FRAM_INDEX23,   FRAM_INDEX24,   FRAM_INDEX25,   FRAM_INDEX26,   FRAM_INDEX27,   FRAM_INDEX28,   FRAM_INDEX29,
    FRAM_INDEX30,   FRAM_INDEX31,   FRAM_INDEX32,   FRAM_INDEX33,   FRAM_INDEX34,   FRAM_INDEX35,   FRAM_INDEX36,   FRAM_INDEX37,   FRAM_INDEX38,   FRAM_INDEX39,
    FRAM_INDEX40,   FRAM_INDEX41,   FRAM_INDEX42,   FRAM_INDEX43,   FRAM_INDEX44,   FRAM_INDEX45,   FRAM_INDEX46,   FRAM_INDEX47,   FRAM_INDEX48,   FRAM_INDEX49,
    FRAM_INDEX50,   FRAM_INDEX51,   FRAM_INDEX52,   FRAM_INDEX53,   FRAM_INDEX54,   FRAM_INDEX55,   FRAM_INDEX56,   FRAM_INDEX57,   FRAM_INDEX58,   FRAM_INDEX59,
    FRAM_INDEX60,   FRAM_INDEX61,   FRAM_INDEX62,   FRAM_INDEX63,   FRAM_INDEX64,   FRAM_INDEX65,   FRAM_INDEX66,   FRAM_INDEX67,   FRAM_INDEX68,   FRAM_INDEX69,
    FRAM_INDEX70,   FRAM_INDEX71,   FRAM_INDEX72,   FRAM_INDEX73,   FRAM_INDEX74,   FRAM_INDEX75,   FRAM_INDEX76,   FRAM_INDEX77,   FRAM_INDEX78,   FRAM_INDEX79,
    FRAM_INDEX80,   FRAM_INDEX81,   FRAM_INDEX82,   FRAM_INDEX83,   FRAM_INDEX84,   FRAM_INDEX85,   FRAM_INDEX86,   FRAM_INDEX87,   FRAM_INDEX88,   FRAM_INDEX89,
    FRAM_INDEX90,   FRAM_INDEX91,   FRAM_INDEX92,   FRAM_INDEX93,   FRAM_INDEX94,   FRAM_INDEX95,   FRAM_INDEX96,   FRAM_INDEX97,   FRAM_INDEX98,   FRAM_INDEX99,

    FRAM_INDEX100,  FRAM_INDEX101,  FRAM_INDEX102,  FRAM_INDEX103,  FRAM_INDEX104,  FRAM_INDEX105,  FRAM_INDEX106,  FRAM_INDEX107,  FRAM_INDEX108,  FRAM_INDEX109,
    FRAM_INDEX110,  FRAM_INDEX111,  FRAM_INDEX112,  FRAM_INDEX113,  FRAM_INDEX114,  FRAM_INDEX115,  FRAM_INDEX116,  FRAM_INDEX117,  FRAM_INDEX118,  FRAM_INDEX119,
    FRAM_INDEX120,  FRAM_INDEX121,  FRAM_INDEX122,  FRAM_INDEX123,  FRAM_INDEX124,  FRAM_INDEX125,  FRAM_INDEX126,  FRAM_INDEX127,
};
enum
{
    FRAM_INDEX0_START_ADDR = FRAM_INDEX0 * FRAM_BLOCK_SIZE, FRAM_INDEX1_START_ADDR = FRAM_INDEX1 * FRAM_BLOCK_SIZE,
    FRAM_INDEX2_START_ADDR = FRAM_INDEX2 * FRAM_BLOCK_SIZE, FRAM_INDEX3_START_ADDR = FRAM_INDEX3 * FRAM_BLOCK_SIZE,
    FRAM_INDEX4_START_ADDR = FRAM_INDEX4 * FRAM_BLOCK_SIZE, FRAM_INDEX5_START_ADDR = FRAM_INDEX5 * FRAM_BLOCK_SIZE,
    FRAM_INDEX6_START_ADDR = FRAM_INDEX6 * FRAM_BLOCK_SIZE, FRAM_INDEX7_START_ADDR = FRAM_INDEX7 * FRAM_BLOCK_SIZE,

};



typedef union
{
    uint16  FramUI[2];
    float32 FramF;

} FramData;

typedef struct
{
    uint16 Used;
    uint16 Free;
    uint16 CRC;

} HeaderData;


uint16 FRAM_ByteRead(uint16 Addr);
uint16 FRAM_WordRead(uint16 addr);

void FRAM_ByteWrite(uint16 Addr, uint16 Data);
void FRAM_WordWrite(uint16 addr, uint16 Data);

#endif /* BSP_ZONE7_MEMORY_FRAM_H_ */
